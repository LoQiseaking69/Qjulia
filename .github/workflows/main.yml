name: Build, Publish, and Package Quantum Fractal Generator

on:
  push:
    branches: [main]
    tags: ['*']
  pull_request:
    branches: [main]

jobs:
  build-and-publish:
    runs-on: windows-latest
    environment: QJulia  # Specify the environment name here

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Rust Environment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true

      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~\.cargo\registry
            ~\.cargo\git
          key: ${{ runner.os }}-rust-deps-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Rust Target Directory
        uses: actions/cache@v3
        with:
          path: src/target
          key: ${{ runner.os }}-rust-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Rust Library
        run: |
          cd src
          cargo build --release

      # Adjusted publish step to change to the correct directory
      - name: Publish to Crates.io
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd src
          cargo publish --token ${{ secrets.QJCRATE }} --allow-dirty
        env:
          CARGO_TERM_COLOR: always

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      # Package application with PyInstaller
      - name: Package PyQt5 Application
        run: |
          pyinstaller --noconfirm --onefile --noconsole `
                      --add-binary "src/target/release/q_julia.dll;." `
                      src/QJulia.py
        shell: pwsh

      - name: Upload Compiled Rust Library and Packaged Application
        uses: actions/upload-artifact@v3
        with:
          name: quantum-fractal-package
          path: |
            src/target/release/q_julia.dll
            dist/QJulia.exe
